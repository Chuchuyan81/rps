/**
 * Service Worker –¥–ª—è –∏–≥—Ä—ã "–ö–∞–º–µ–Ω—å, –ù–æ–∂–Ω–∏—Ü—ã, –ë—É–º–∞–≥–∞"
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ —Ä–∞–±–æ—Ç—É –≤ –æ—Ñ–ª–∞–π–Ω–µ
 */

const CACHE_NAME = 'rps-game-v1.0.1';
const CACHE_URLS = [
  '/',
  '/index.html',
  '/script.js',
  '/style.css',
  '/manifest.json',
  '/debug.html',
  '/test-room-logic.html',
  '/favicon.ico',
  // –ò–∫–æ–Ω–∫–∏
  '/icons/icon-16x16.png',
  '/icons/icon-32x32.png',
  '/icons/icon-48x48.png',
  '/icons/icon-72x72.png',
  '/icons/icon-96x96.png',
  '/icons/icon-144x144.png',
  '/icons/icon-192x192.png',
  '/icons/icon-512x512.png',
  // –í–Ω–µ—à–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ã
  'https://unpkg.com/@supabase/supabase-js@2'
];

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Service Worker
self.addEventListener('install', (event) => {
  console.log('üîß Service Worker: –£—Å—Ç–∞–Ω–æ–≤–∫–∞');
  
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then((cache) => {
        console.log('üì¶ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤');
        return cache.addAll(CACHE_URLS);
      })
      .then(() => {
        console.log('‚úÖ –í—Å–µ —Ä–µ—Å—É—Ä—Å—ã –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω—ã');
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ SW
        return self.skipWaiting();
      })
      .catch((error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      })
  );
});

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è Service Worker
self.addEventListener('activate', (event) => {
  console.log('üöÄ Service Worker: –ê–∫—Ç–∏–≤–∞—Ü–∏—è');
  
  event.waitUntil(
    caches.keys()
      .then((cacheNames) => {
        return Promise.all(
          cacheNames.map((cacheName) => {
            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫—ç—à–∏
            if (cacheName !== CACHE_NAME) {
              console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫—ç—à:', cacheName);
              return caches.delete(cacheName);
            }
          })
        );
      })
      .then(() => {
        console.log('‚úÖ Service Worker –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
        // –ü—Ä–∏–Ω–∏–º–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –≤—Å–µ–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏
        return self.clients.claim();
      })
  );
});

// –ü–µ—Ä–µ—Ö–≤–∞—Ç —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
self.addEventListener('fetch', (event) => {
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –∫ Supabase API –¥–ª—è real-time —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
  if (event.request.url.includes('supabase.co')) {
    return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è API
  }
  
  event.respondWith(
    caches.match(event.request)
      .then((cachedResponse) => {
        // –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å –µ—Å—Ç—å –≤ –∫—ç—à–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
        if (cachedResponse) {
          console.log('üì¶ –ò–∑ –∫—ç—à–∞:', event.request.url);
          return cachedResponse;
        }
        
        // –ï—Å–ª–∏ –Ω–µ—Ç –≤ –∫—ç—à–µ, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ —Å–µ—Ç–∏
        return fetch(event.request)
          .then((response) => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –≤–∞–ª–∏–¥–Ω—ã–π
            if (!response || response.status !== 200 || response.type !== 'basic') {
              return response;
            }
            
            // –ö–ª–æ–Ω–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –∫—ç—à–∞
            const responseToCache = response.clone();
            
            caches.open(CACHE_NAME)
              .then((cache) => {
                cache.put(event.request, responseToCache);
              });
            
            return response;
          })
          .catch(() => {
            // –ï—Å–ª–∏ —Å–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ñ–ª–∞–π–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—É
            if (event.request.destination === 'document') {
              return caches.match('/index.html');
            }
          });
      })
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞
self.addEventListener('message', (event) => {
  if (event.data && event.data.type === 'SKIP_WAITING') {
    console.log('‚è≠Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ SW');
    self.skipWaiting();
  }
  
  if (event.data && event.data.type === 'GET_VERSION') {
    event.ports[0].postMessage({
      version: CACHE_NAME
    });
  }
});

// –§–æ–Ω–æ–≤–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
self.addEventListener('sync', (event) => {
  console.log('üîÑ –§–æ–Ω–æ–≤–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:', event.tag);
  
  if (event.tag === 'background-sync') {
    event.waitUntil(
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
      console.log('üì° –í—ã–ø–æ–ª–Ω—è–µ–º —Ñ–æ–Ω–æ–≤—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é')
    );
  }
});

// Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–¥–ª—è –±—É–¥—É—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π)
self.addEventListener('push', (event) => {
  console.log('üì± Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ');
  
  const options = {
    body: event.data ? event.data.text() : '–ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç –∏–≥—Ä—ã!',
    icon: '/icons/icon-192x192.png',
    badge: '/icons/icon-72x72.png',
    vibrate: [200, 100, 200],
    data: {
      dateOfArrival: Date.now(),
      primaryKey: 1
    },
    actions: [
      {
        action: 'explore',
        title: '–ò–≥—Ä–∞—Ç—å',
        icon: '/icons/icon-96x96.png'
      },
      {
        action: 'close',
        title: '–ó–∞–∫—Ä—ã—Ç—å',
        icon: '/icons/icon-96x96.png'
      }
    ]
  };
  
  event.waitUntil(
    self.registration.showNotification('–ö–∞–º–µ–Ω—å, –ù–æ–∂–Ω–∏—Ü—ã, –ë—É–º–∞–≥–∞', options)
  );
}); 